@model LeaderboardApp.DTOs.ChallengeDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Certification";
}

<div class="container mt-5">
    <div class="card shadow-sm" style="border-radius: 8px;">
        <div class="card-body">
            <!-- Badge + Title -->
            <div class="d-flex align-items-center mb-3">
                <img src="~/images/certificateicon.svg" alt="Module Icon" style="width: 60px; height: 60px; margin-right: 20px;" />
                <div>
                    <h2 style="margin: 0;">@Model.Title</h2>                    
                </div>
            </div>

            <!-- Summary -->
            <!-- Link to full module -->

            @if (!string.IsNullOrEmpty(Model.Content))
            {
                @Html.Raw(Model.Content)
            }

            <!-- Validation Link Input -->            
            <div class="mt-5">
                <h5 style="font-weight: 600;">Paste your validation link</h5>
                <input type="hidden" id="challengeId" value="@Model.ChallengeId" />
                <input type="url" id="validationLink" class="form-control" @(Model.IsCompleted ? "disabled" : "")
                       placeholder="If this doesn't work, please reach out to the admin" required />
                <button id="submitBtn" class="btn btn-success mt-2"
                @(Model.IsCompleted ? "disabled" : "")>
                    @(Model.IsCompleted ? "Completed" : "Submit")
                </button>
                <div id="message" class="mt-2"></div>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.getElementById("submitBtn").addEventListener("click", async function () {
            const challengeId = document.getElementById("challengeId").value;
            const link = document.getElementById("validationLink").value;
            const message = document.getElementById("message");

            const payload = {
                ChallengeId: parseInt(challengeId),
                ValidationLink: link
            };

            const response = await fetch('@Url.Action("SubmitCertification", "Learn")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            });

            if (response.ok) {
                document.getElementById("validationLink").disabled = true;
                document.getElementById("submitBtn").innerText = "Completed";
                document.getElementById("submitBtn").disabled = true;                
                message.innerHTML = "<span class='text-success'>Validation link submitted!</span>";
            } else {
                const errorText = await response.text();
                message.innerHTML = "<span class='text-danger'>" + errorText + "</span>";
            }
        });
    </script>
}